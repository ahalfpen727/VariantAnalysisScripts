#!bin/bash
# PILOT DATA                                                           
cd ~/Downloads/GoodCell-Resources/GuniosAnalysis/2019_09/LVB_fastq_Sept2019_concat_fastq
find -iname "*_R1_0012.fastq.gz" | cut -d/ -f2 | cut -d_ -f1 > sm.txt

###########################################################################
## MISEQ DATA                                                            ##
###########################################################################

for sfx in 1-1 1-2 1-3 2-1 2-2 2-3 2-4 3-1 3-2 3-3; do
  unzip raw/Batch$sfx.zip
done
find -iname "*_R1_0[01][12].fastq.gz" | grep -v "MPC10\|NA12878\|NA18507" | cut -d/ -f4 | cut -d_ -f1 > sm.txt

###########################################################################
## NEXTSEQ DATA                                                          ##
###########################################################################

unzip FASTQ_Part1.zip
unzip FASTQ_Part2.zip
find -iname "*_R1_001.fastq.gz" | cut -d/ -f2 | cut -d_ -f1 > sm.txt

###########################################################################
## FASTQ ALIGNMENT                                                       ##
###########################################################################

for file in $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna*; do ln -s $file; done

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}

# pilot data and MiSeq data
for i in $(seq 1 $n); do
  fastq_arr=( $(find -iname "*_R1_001.fastq.gz" | grep -v "MPC10\|NA12878\|NA18507") ); \
  sm_arr=( $(cat sm.txt) ); \
  fastq_r1=${fastq_arr[(($i-1))]}; \
  fastq_r2=${fastq_r1%_R1_001.fastq.gz}_R2_001.fastq.gz; \
  sm=${sm_arr[(($i-1))]}; \
  str="@RG\tID:$sm\tPL:ILLUMINA\tPU:$sm\tLB:$sm\tSM:$sm"; \
  bwa mem -M -R "$str" GCA_000001405.15_GRCh38_no_alt_analysis_set.fna $fastq_r1 $fastq_r2 | \
    samtools view -Sb - | \
    samtools sort - -o $sm.raw.bam && \
    samtools index $sm.raw.bam
done

# NextSeq data
for i in $(seq 1 $n); do
  fastq_arr=( $(find -iname "*_R1_001.fastq.gz" ) ); \
  sm_arr=( $(cat sm.txt) ); \
  fastq_r1=${fastq_arr[(($i-1))]}; \
  fastq_r2=${fastq_r1%_R1_001.fastq.gz}_R2_001.fastq.gz; \
  sm=${sm_arr[(($i-1))]}; \
  str="@RG\tID:$sm\tPL:ILLUMINA\tPU:$sm\tLB:$sm\tSM:$sm"; \
  bwa mem -M -R "$str" GCA_000001405.15_GRCh38_no_alt_analysis_set.fna $fastq_r1 $fastq_r2 | \
    samtools view -Sb - | \
    samtools sort - -o $sm.raw.bam && \
    samtools index $sm.raw.bam
done

###########################################################################
## REMOVE DUPLICATES                                                     ##
###########################################################################

ln -s $HOME/res/picard.jar

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for i in $(seq 1 $n); do
  sm_arr=( $(cat sm.txt) ); \
  sm=${sm_arr[(($i-1))]}; \
  java \
    -jar picard.jar \
    MarkDuplicates \
    I=$sm.raw.bam \
    O=$sm.tmp.bam \
    M=$sm.txt && \
  samtools index $sm.tmp.bam
done

###########################################################################
## RECALIBRATE BASE PAIRS                                                ##
###########################################################################

ln -s $HOME/res/gatk-4.1.3.0
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.dict
ln -s $HOME/res/vqsr/1000G_phase1.snps.high_confidence.hg38.vcf.gz
ln -s $HOME/res/vqsr/1000G_phase1.snps.high_confidence.hg38.vcf.gz.tbi

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for i in $(seq 1 $n); do
  sm_arr=( $(cat sm.txt) ); \
  sm=${sm_arr[(($i-1))]}; \
  gatk-4.1.3.0/gatk \
    BaseRecalibrator \
    -R GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
    -I $sm.tmp.bam \
    --known-sites 1000G_phase1.snps.high_confidence.hg38.vcf.gz \
    -O $sm.grp && \
  gatk-4.1.3.0/gatk \
    ApplyBQSR \
    -R GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
    -I $sm.tmp.bam \
    --bqsr-recal-file $sm.grp \
    -O $sm.bam && \
  samtools index $sm.bam
done

###########################################################################
## COMPUTE COVERAGE OVER TARGETS                                         ##
###########################################################################

ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for sm in ${sm_arr[@]}; do
  bedtools coverage -g GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai -sorted -a 3215481_Covered.GRCh38.bed -b $sm.bam -mean | \
  cut -f5 > $sm.cov
done
(echo -en "CHROM\tBEG\tEND\tNAME\t"; tr '\n' '\t' < sm.txt | sed 's/\t$/\n/'; \
paste 3215481_Covered.GRCh38.bed $(cat sm.txt | sed 's/$/.cov/' | tr '\n' '\t' | sed 's/\t$/\n/')) \
  > 3215481_Covered.GRCh38.tsv
/bin/rm $(cat sm.txt | sed 's/$/.cov/' | tr '\n' '\t' | sed 's/\t$/\n/')

###########################################################################
## CLEAN UP                                                              ##
###########################################################################

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for i in $(seq 0 $((n-1))); do \
  sm=${sm_arr[$i]}; \
  /bin/rm ${sm}_S*_R[12]_001.fastq.gz
  /bin/rm $sm.{raw,tmp}.bam{,.bai}; \
done

# pilot data
/bin/rm -rf concat_fastq

# MiSeq data
/bin/rm -rf Batch{1-1,1-2,1-3,2-1,2-2,2-3,2-4,3-1,3-2,3-3}

###########################################################################
## LIFT OVER TARGETS TO GRCH38                                           ##
###########################################################################

ln -s $HOME/res/hg19ToHg38.over.chain.gz

grep ^chr 3215481_Covered.bed | \
  liftOver \
    /dev/stdin \
    hg19ToHg38.over.chain.gz \
    3215481_Covered.GRCh38.bed \
    /dev/stderr

###########################################################################
## MUTECT2                                                               ##
###########################################################################

ln -s $HOME/res/gatk-4.1.3.0
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.dict

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for i in $(seq 1 $n); do
  sm_arr=( $(cat sm.txt) ); \
  sm=${sm_arr[(($i-1))]}; \
  gatk-4.1.3.0/gatk \
  Mutect2 \
  --max-reads-per-alignment-start 0 \
  --allow-non-unique-kmers-in-ref \
  -R GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
  -I $sm.bam \
  -O m2.$sm.GRCh38.vcf.gz \
  -L 3215481_Covered.GRCh38.bed \
  --create-output-variant-index true
done

###########################################################################
## HAPLOTYPE CALLER                                                      ##
###########################################################################

ln -s $HOME/res/gatk-4.1.3.0
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.fai
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.dict

sm_arr=( $(cat sm.txt) )
n=${#sm_arr[@]}
for i in $(seq 1 $n); do
  sm_arr=( $(cat sm.txt) ); \
  sm=${sm_arr[(($i-1))]}; \
  gatk-4.1.3.0/gatk \
  HaplotypeCaller \
  --max-reads-per-alignment-start 0 \
  -R GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
  -I $sm.bam \
  -O hc.$sm.GRCh38.vcf.gz \
  -L 3215481_Covered.GRCh38.bed \
  --create-output-variant-index true
done

###########################################################################
## MERGE CALLS                                                           ##
###########################################################################

mkdir -p vcfs
/bin/mv {hc,m2}.*.GRCh38.vcf.gz{,.tbi,.stats} vcfs/

sm_arr=( $(cat sm.txt) )
for pfx in hc m2; do
  input=$(echo ${sm_arr[@]} | sed 's/ /.GRCh38.vcf.gz vcfs\/'$pfx'./g;s/^/vcfs\/'$pfx'./;s/$/.GRCh38.vcf.gz/')
  ref="GCA_000001405.15_GRCh38_no_alt_analysis_set.fna"

  /bin/bcftools merge --no-version -Ou $input | \
    bcftools norm --no-version -Ou -m -any --keep-sum AD | \
    bcftools norm --no-version -Ob -o $pfx.GRCh38.bcf -f $ref && \
    bcftools index -f $pfx.GRCh38.bcf
done

###########################################################################
## ANNOTATE VARIANTS                                                     ##
###########################################################################

date="20200419"
ln -s $HOME/res/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna
ln -s $HOME/res/ensembl/Homo_sapiens.GRCh38.fixed.98.gff3.gz
ln -s $HOME/res/clinvar/clinvar_$date.GRCh38.vcf.gz
ln -s $HOME/res/clinvar/clinvar_$date.GRCh38.vcf.gz.tbi
ln -s $HOME/res/ALL.GRCh38_sites.20170504.bcf
ln -s $HOME/res/ALL.GRCh38_sites.20170504.bcf.csi

for pfx in hc m2; do
  list="KGP_AF:=AF,EAS_AF,EUR_AF,AFR_AF,AMR_AF,SAS_AF"
  bcftools annotate --no-version -Ou -a ALL.GRCh38_sites.20170504.bcf -c $list $pfx.GRCh38.bcf | \
    bcftools csq --no-version -Ob -o $pfx.csq.GRCh38.bcf -f GCA_000001405.15_GRCh38_no_alt_analysis_set.fna \
    -g Homo_sapiens.GRCh38.fixed.98.gff3.gz -b -l -n 64 -s - && \
    bcftools index -f $pfx.csq.GRCh38.bcf
  /bin/rm $pfx.GRCh38.bcf{,.csi}

  list="VARIATIONID,EXAC_AF:=AF_EXAC,CLNDN,CLNSIG,GENEINFO,MC,RS"
  bcftools annotate --no-version -Ob -o $pfx.clinvar.GRCh38.bcf -a clinvar_$date.GRCh38.vcf.gz -c $list $pfx.csq.GRCh38.bcf
  bcftools index -f $pfx.clinvar.GRCh38.bcf
  /bin/rm $pfx.csq.GRCh38.bcf{,.csi}
done

###########################################################################
## EXTRACT TABLE                                                         ##
###########################################################################

hdr="SAMPLE\tGT\tAD_REF\tAD_ALT\tTLOD\tCHROM\tPOS_GRCh38\tREF\tALT\tKGP_AF\tEAS_AF\tEUR_AF\tAFR_AF\tAMR_AF\tSAS_AF\tEXAC_AF\tURL\tCLNDN\tCLNSIG\tGENEINFO\tMC\tCSQ"
fmt="[%SAMPLE\t%GT\t%AD{0}\t%AD{1}\t%TLOD\t%CHROM\t%POS\t%REF\t%ALT\t%KGP_AF\t%EAS_AF\t%EUR_AF\t%AFR_AF\t%AMR_AF\t%SAS_AF\t%EXAC_AF\thttps://www.ncbi.nlm.nih.gov/clinvar/variation/%VARIATIONID\t%CLNDN\t%CLNSIG\t%GENEINFO\t%MC\t%INFO/BCSQ\n]"
inc='((EAS_AF<.005 || EAS_AF=".") && (EUR_AF<.005 || EUR_AF=".") && (AFR_AF<.005 || AFR_AF=".") &&
     (AMR_AF<.005 || AMR_AF=".") && (SAS_AF<.005 || SAS_AF=".") && (EXAC_AF<.005 || EXAC_AF=".") ||
     CLNSIG="Likely_pathogenic" || CLNSIG="Pathogenic" || CLNSIG="Pathogenic,_association" || CLNSIG="Pathogenic/Likely_pathogenic") &&
     (GT!="0/0" & GT!="./." & AD[:0]+AD[:1]>50 & AD[:1]>7)'

set="pilot"
set="miseq"
set="nextseq"

for pfx in hc m2; do
  vcf="$pfx.clinvar.GRCh38.bcf"
  (echo -e "$hdr"; \
  if [ $pfx == "hc" ]; then bcftools query -f "$(echo $fmt | sed 's/%TLOD/./g')" -i "$inc" $vcf; else bcftools query -f "$fmt" $vcf -i "$inc"; fi | \
    sed 's/\thttps:\/\/www\.ncbi\.nlm\.nih\.gov\/clinvar\/variation\/\.\t/\t.\t/;s/\trs\.\t/\t.\t/') > $pfx.GRCh38.tsv
  grep "^SAMPLE\|Pathogenic\|Likely_pathogenic\|missense\|stop\|inframe\|frameshift\|splice_donor\|splice_acceptor" $pfx.GRCh38.tsv | \
    awk -F"\t" -v OFS="\t" 'NR==1 {$4=$4"\tCF"} NR>1 {cf=2*$4/($3+$4); $4=$4"\t"cf} NR==1 || cf<.8 || $19~"[Pp]athogenic"' | \
    awk -F"\t" -v set="$set" 'NR==FNR {x[$1]++} NR>FNR && FNR==1 {print $0"\tIGV"}
    NR>FNR && FNR>1 && !($8 in x) {print $0"\thttp://personal.broadinstitute.org/giulio/goodcell/target/"set"."$1"."$7"."$8".png"}' \
    <(echo -e "7669662\n5080630\n5080639\n5080642\n5080645\n5080648\n5080650\n7669678") - > $pfx.bad.GRCh38.tsv
done

###########################################################################
## IGV PLOTS                                                             ##
###########################################################################

set="pilot"
set="miseq"
set="nextseq"

mkdir -p pngs
for pfx in hc m2; do
  tail -n+2 $pfx.bad.GRCh38.tsv | awk -F"\t" -v set="$set" '
  BEGIN {print "genome https://s3.amazonaws.com/igv.org.genomes/hg38/hg38.genome";
  print "expand \"Gene\""; print "maxPanelHeight 1600"}
  BEGIN {print "new"; print "goto chr17:7675020-7675120"; print "load MH0138820.bam";
  print "sort base"; print "snapshot pngs/"set".MH0138820.chr17.7675070.png"}
  {print "new"; print "goto "$7":"$8-50"-"$8+50; print "load "$1".bam";
  print "sort base"; print "snapshot pngs/"set"."$1"."$7"."$8".png"}
  END {print "exit"}' > igv.batch
  (Xvfb :1024 -screen 0 2560x1600x24 &)
  DISPLAY=:1024 $HOME/res/IGV_Linux_2.8.0/igv.sh -b igv.batch
done
/bin/rm igv.batch

###########################################################################
## FINAL REPORT                                                          ##
###########################################################################

csv2xlsx.py -d tab -w 1.3 -b -f 1 0 -o target.GRCh38.xlsx -i \
  2019_09/{3215481_Covered,{hc,m2}.bad}.GRCh38.tsv \
  2019_12/{3215481_Covered,{hc,m2}.bad}.GRCh38.tsv \
  2020_02/{3215481_Covered,{hc,m2}.bad}.GRCh38.tsv -t \
  "Pilot coverage" "Pilot HaplotypeCaller" "Pilot Mutect2" \
  "MiSeq coverage" "MiSeq HaplotypeCaller" "MiSeq Mutect2" \
  "NextSeq coverage" "NextSeq HaplotypeCaller" "NextSeq Mutect2"
scp target.GRCh38.xlsx 2019_09/pngs/pilot.*.png 2019_12/pngs/miseq.*.png 2020_02/pngs/nextseq.*.png \
  giulio@xfer3.broadinstitute.org:public_html/goodcell/target/
